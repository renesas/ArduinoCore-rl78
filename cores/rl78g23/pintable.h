/*
  pintable.h
  Copyright (c) 2015 Nozomu Fujita. All right reserved.

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/
#ifndef _PINTABLE_H_
#define _PINTABLE_H_

#include <pins_arduino.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#ifdef __cplusplus
extern "C" {
#endif

#define getPortModeRegisterAddr(port)		    ((volatile uint8_t*)(ADDR_PORT_MODE_REG + port))			/*!< Base Address of Port Mode Register	*/
#define getPortPullUpRegisterAddr(port)		    ((volatile uint8_t*)(ADDR_PORT_PULL_UP_REG + port))			/*!< Base Address of Port Pull-up Register	*/
#define getPortInputModeRegisterAddr(port)	    ((volatile uint8_t*)(ADDR_PORT_IN_MODE_REG + port))			/*!< Base Address of Port Input Mode Register	*/
#define getPortOutputModeRegisterAddr(port)	    ((volatile uint8_t*)(ADDR_PORT_OUT_MODE_REG + port))		/*!< Base Address of Port Output Mode Register	*/
#define getPortRegisterAddr(port)		        ((volatile uint8_t*)(ADDR_PORT_REG + port))					/*!< Base Address of Port Register	*/

/* Add for G23 */
#define getPortModeControlARegisterAddr(port)	((volatile uint8_t*)(ADDR_PORT_MODE_CONTROL_A_REG + port))	/*!< Base Address of Port Mode Control-A Register	*/
#define getPortModeControlTRegisterAddr(port)	((volatile uint8_t*)(ADDR_PORT_MODE_CONTROL_T_REG + port))	/*!< Base Address of Port Mode Control-T Register	*/
#define getPortModeControlERegisterAddr(port)	((volatile uint8_t*)(ADDR_PORT_MODE_CONTROL_E_REG + port))	/*!< Base Address of Port Mode Control-E Register	*/
#define getPortOutCurControlRegisterAddr()		((volatile uint8_t*)(ADDR_PORT_OUT_CUR_CONTROL_REG))		/*!< Base Address of Port Output Current Control Register	*/
#define getPortDigInputDisRegisterAddr(port)	((volatile uint8_t*)(ADDR_PORT_DIG_INPUT_DIS_REG + port))	/*!< Base Address of Port Digital Input Disable Register	*/
/* Add for G23 */

typedef struct {
	uint8_t mask;
	uint8_t bit;
	uint8_t timer;
	uint8_t pmca;
	/* Add for G23 */
	uint8_t pmct;
	uint8_t pmce;
	uint8_t ccde;
	uint8_t pdidis;
	uint8_t pm;
	uint8_t pu;
	uint8_t pim;
	uint8_t pom;
	/* Add for G23 */
	volatile uint8_t* portModeRegisterAddr;
	volatile uint8_t* portPullUpRegisterAddr;
	volatile uint8_t* portInputModeRegisterAddr;
	volatile uint8_t* portOutputModeRegisterAddr;
	volatile uint8_t* portRegisterAddr;
	/* Add for G23 */
	volatile uint8_t* portModeControlARegisterAddr;
	volatile uint8_t* portModeControlTRegisterAddr;
	volatile uint8_t* portModeControlERegisterAddr;
	volatile uint8_t* portOutCurControlRegisterAddr;
	volatile uint8_t* portDigInputDisRegisterAddr;
	/* Add for G23 */
} PinTableType;


extern const uint8_t digital_pin[NUM_DIGITAL_PINS] __attribute__((weak));
const uint8_t digital_pin[NUM_DIGITAL_PINS] = {
		DIGITAL_PIN_0,DIGITAL_PIN_1,DIGITAL_PIN_2,DIGITAL_PIN_3,DIGITAL_PIN_4,
		DIGITAL_PIN_5,DIGITAL_PIN_6,DIGITAL_PIN_7,DIGITAL_PIN_8,DIGITAL_PIN_9,
		DIGITAL_PIN_10,DIGITAL_PIN_11,DIGITAL_PIN_12,DIGITAL_PIN_13,DIGITAL_PIN_14,
		DIGITAL_PIN_15,DIGITAL_PIN_16,DIGITAL_PIN_17,DIGITAL_PIN_18,DIGITAL_PIN_19,
		DIGITAL_PIN_20,DIGITAL_PIN_21,DIGITAL_PIN_22,DIGITAL_PIN_23,DIGITAL_PIN_24,
		DIGITAL_PIN_25,DIGITAL_PIN_26,DIGITAL_PIN_27,DIGITAL_PIN_28,DIGITAL_PIN_29,
		DIGITAL_PIN_30,DIGITAL_PIN_31,DIGITAL_PIN_32,DIGITAL_PIN_33,DIGITAL_PIN_34,
		DIGITAL_PIN_35,DIGITAL_PIN_36,DIGITAL_PIN_37,DIGITAL_PIN_38,DIGITAL_PIN_39,
		DIGITAL_PIN_40,DIGITAL_PIN_41,DIGITAL_PIN_42,DIGITAL_PIN_43,DIGITAL_PIN_44,
		DIGITAL_PIN_45,DIGITAL_PIN_46,DIGITAL_PIN_47,DIGITAL_PIN_48,DIGITAL_PIN_49,
		DIGITAL_PIN_50,DIGITAL_PIN_51,DIGITAL_PIN_52,DIGITAL_PIN_53,DIGITAL_PIN_54,
		DIGITAL_PIN_55,DIGITAL_PIN_56,
};
extern const uint8_t pin_mask[NUM_DIGITAL_PINS] __attribute__((weak));
const uint8_t pin_mask[NUM_DIGITAL_PINS] = {
		DIGITAL_PIN_MASK_0,DIGITAL_PIN_MASK_1,DIGITAL_PIN_MASK_2,DIGITAL_PIN_MASK_3,DIGITAL_PIN_MASK_4,
		DIGITAL_PIN_MASK_5,	DIGITAL_PIN_MASK_6,	DIGITAL_PIN_MASK_7,	DIGITAL_PIN_MASK_8,	DIGITAL_PIN_MASK_9,
		DIGITAL_PIN_MASK_10,DIGITAL_PIN_MASK_11,DIGITAL_PIN_MASK_12,DIGITAL_PIN_MASK_13,DIGITAL_PIN_MASK_14,
		DIGITAL_PIN_MASK_15,DIGITAL_PIN_MASK_16,DIGITAL_PIN_MASK_17,DIGITAL_PIN_MASK_18,DIGITAL_PIN_MASK_19,
		DIGITAL_PIN_MASK_20,DIGITAL_PIN_MASK_21,DIGITAL_PIN_MASK_22,DIGITAL_PIN_MASK_23,DIGITAL_PIN_MASK_24,
		DIGITAL_PIN_MASK_25,DIGITAL_PIN_MASK_26,DIGITAL_PIN_MASK_27,DIGITAL_PIN_MASK_28,DIGITAL_PIN_MASK_29,
		DIGITAL_PIN_MASK_30,DIGITAL_PIN_MASK_31,DIGITAL_PIN_MASK_32,DIGITAL_PIN_MASK_33,DIGITAL_PIN_MASK_34,
		DIGITAL_PIN_MASK_35,DIGITAL_PIN_MASK_36,DIGITAL_PIN_MASK_37,DIGITAL_PIN_MASK_38,DIGITAL_PIN_MASK_39,
		DIGITAL_PIN_MASK_40,DIGITAL_PIN_MASK_41,DIGITAL_PIN_MASK_42,DIGITAL_PIN_MASK_43,DIGITAL_PIN_MASK_44,
		DIGITAL_PIN_MASK_45,DIGITAL_PIN_MASK_46,DIGITAL_PIN_MASK_47,DIGITAL_PIN_MASK_48,DIGITAL_PIN_MASK_49,
		DIGITAL_PIN_MASK_50,DIGITAL_PIN_MASK_51,DIGITAL_PIN_MASK_52,DIGITAL_PIN_MASK_53,DIGITAL_PIN_MASK_54,
		DIGITAL_PIN_MASK_55,DIGITAL_PIN_MASK_56,
};
extern const uint8_t pin_bit[NUM_DIGITAL_PINS] __attribute__((weak));
const uint8_t pin_bit[NUM_DIGITAL_PINS] = {
		DIGITAL_PIN_BIT_0,DIGITAL_PIN_BIT_1,DIGITAL_PIN_BIT_2,DIGITAL_PIN_BIT_3,DIGITAL_PIN_BIT_4,
		DIGITAL_PIN_BIT_5,DIGITAL_PIN_BIT_6,DIGITAL_PIN_BIT_7,DIGITAL_PIN_BIT_8,DIGITAL_PIN_BIT_9,
		DIGITAL_PIN_BIT_10,DIGITAL_PIN_BIT_11,DIGITAL_PIN_BIT_12,DIGITAL_PIN_BIT_13,DIGITAL_PIN_BIT_14,
		DIGITAL_PIN_BIT_15,DIGITAL_PIN_BIT_16,DIGITAL_PIN_BIT_17,DIGITAL_PIN_BIT_18,DIGITAL_PIN_BIT_19,
		DIGITAL_PIN_BIT_20,DIGITAL_PIN_BIT_21,DIGITAL_PIN_BIT_22,DIGITAL_PIN_BIT_23,DIGITAL_PIN_BIT_24,
		DIGITAL_PIN_BIT_25,DIGITAL_PIN_BIT_26,DIGITAL_PIN_BIT_27,DIGITAL_PIN_BIT_28,DIGITAL_PIN_BIT_29,
		DIGITAL_PIN_BIT_30,DIGITAL_PIN_BIT_31,DIGITAL_PIN_BIT_32,DIGITAL_PIN_BIT_33,DIGITAL_PIN_BIT_34,
		DIGITAL_PIN_BIT_35,DIGITAL_PIN_BIT_36,DIGITAL_PIN_BIT_37,DIGITAL_PIN_BIT_38,DIGITAL_PIN_BIT_39,
		DIGITAL_PIN_BIT_40,DIGITAL_PIN_BIT_41,DIGITAL_PIN_BIT_42,DIGITAL_PIN_BIT_43,DIGITAL_PIN_BIT_44,
		DIGITAL_PIN_BIT_45,DIGITAL_PIN_BIT_46,DIGITAL_PIN_BIT_47,DIGITAL_PIN_BIT_48,DIGITAL_PIN_BIT_49,
		DIGITAL_PIN_BIT_50,DIGITAL_PIN_BIT_51,DIGITAL_PIN_BIT_52,DIGITAL_PIN_BIT_53,DIGITAL_PIN_BIT_54,
		DIGITAL_PIN_BIT_55,DIGITAL_PIN_BIT_56,
};
extern const uint8_t pin_pmca[NUM_DIGITAL_PINS] __attribute__((weak));
const uint8_t pin_pmca[NUM_DIGITAL_PINS] = {
		DIGITAL_PIN_PMCA_0,DIGITAL_PIN_PMCA_1,DIGITAL_PIN_PMCA_2,DIGITAL_PIN_PMCA_3,DIGITAL_PIN_PMCA_4,
		DIGITAL_PIN_PMCA_5,	DIGITAL_PIN_PMCA_6,	DIGITAL_PIN_PMCA_7,	DIGITAL_PIN_PMCA_8,	DIGITAL_PIN_PMCA_9,
		DIGITAL_PIN_PMCA_10,DIGITAL_PIN_PMCA_11,DIGITAL_PIN_PMCA_12,DIGITAL_PIN_PMCA_13,DIGITAL_PIN_PMCA_14,
		DIGITAL_PIN_PMCA_15,DIGITAL_PIN_PMCA_16,DIGITAL_PIN_PMCA_17,DIGITAL_PIN_PMCA_18,DIGITAL_PIN_PMCA_19,
		DIGITAL_PIN_PMCA_20,DIGITAL_PIN_PMCA_21,DIGITAL_PIN_PMCA_22,DIGITAL_PIN_PMCA_23,DIGITAL_PIN_PMCA_24,
		DIGITAL_PIN_PMCA_25,DIGITAL_PIN_PMCA_26,DIGITAL_PIN_PMCA_27,DIGITAL_PIN_PMCA_28,DIGITAL_PIN_PMCA_29,
		DIGITAL_PIN_PMCA_30,DIGITAL_PIN_PMCA_31,DIGITAL_PIN_PMCA_32,DIGITAL_PIN_PMCA_33,DIGITAL_PIN_PMCA_34,
		DIGITAL_PIN_PMCA_35,DIGITAL_PIN_PMCA_36,DIGITAL_PIN_PMCA_37,DIGITAL_PIN_PMCA_38,DIGITAL_PIN_PMCA_39,
		DIGITAL_PIN_PMCA_40,DIGITAL_PIN_PMCA_41,DIGITAL_PIN_PMCA_42,DIGITAL_PIN_PMCA_43,DIGITAL_PIN_PMCA_44,
		DIGITAL_PIN_PMCA_45,DIGITAL_PIN_PMCA_46,DIGITAL_PIN_PMCA_47,DIGITAL_PIN_PMCA_48,DIGITAL_PIN_PMCA_49,
		DIGITAL_PIN_PMCA_50,DIGITAL_PIN_PMCA_51,DIGITAL_PIN_PMCA_52,DIGITAL_PIN_PMCA_53,DIGITAL_PIN_PMCA_54,
		DIGITAL_PIN_PMCA_55,DIGITAL_PIN_PMCA_56,
};
extern const uint8_t pin_pmct[NUM_DIGITAL_PINS] __attribute__((weak));
const uint8_t pin_pmct[NUM_DIGITAL_PINS] = {
		DIGITAL_PIN_PMCT_0,DIGITAL_PIN_PMCT_1,DIGITAL_PIN_PMCT_2,DIGITAL_PIN_PMCT_3,DIGITAL_PIN_PMCT_4,
		DIGITAL_PIN_PMCT_5,	DIGITAL_PIN_PMCT_6,	DIGITAL_PIN_PMCT_7,	DIGITAL_PIN_PMCT_8,	DIGITAL_PIN_PMCT_9,
		DIGITAL_PIN_PMCT_10,DIGITAL_PIN_PMCT_11,DIGITAL_PIN_PMCT_12,DIGITAL_PIN_PMCT_13,DIGITAL_PIN_PMCT_14,
		DIGITAL_PIN_PMCT_15,DIGITAL_PIN_PMCT_16,DIGITAL_PIN_PMCT_17,DIGITAL_PIN_PMCT_18,DIGITAL_PIN_PMCT_19,
		DIGITAL_PIN_PMCT_20,DIGITAL_PIN_PMCT_21,DIGITAL_PIN_PMCT_22,DIGITAL_PIN_PMCT_23,DIGITAL_PIN_PMCT_24,
		DIGITAL_PIN_PMCT_25,DIGITAL_PIN_PMCT_26,DIGITAL_PIN_PMCT_27,DIGITAL_PIN_PMCT_28,DIGITAL_PIN_PMCT_29,
		DIGITAL_PIN_PMCT_30,DIGITAL_PIN_PMCT_31,DIGITAL_PIN_PMCT_32,DIGITAL_PIN_PMCT_33,DIGITAL_PIN_PMCT_34,
		DIGITAL_PIN_PMCT_35,DIGITAL_PIN_PMCT_36,DIGITAL_PIN_PMCT_37,DIGITAL_PIN_PMCT_38,DIGITAL_PIN_PMCT_39,
		DIGITAL_PIN_PMCT_40,DIGITAL_PIN_PMCT_41,DIGITAL_PIN_PMCT_42,DIGITAL_PIN_PMCT_43,DIGITAL_PIN_PMCT_44,
		DIGITAL_PIN_PMCT_45,DIGITAL_PIN_PMCT_46,DIGITAL_PIN_PMCT_47,DIGITAL_PIN_PMCT_48,DIGITAL_PIN_PMCT_49,
		DIGITAL_PIN_PMCT_50,DIGITAL_PIN_PMCT_51,DIGITAL_PIN_PMCT_52,DIGITAL_PIN_PMCT_53,DIGITAL_PIN_PMCT_54,
		DIGITAL_PIN_PMCT_55,DIGITAL_PIN_PMCT_56,
};
extern const uint8_t pin_pmce[NUM_DIGITAL_PINS] __attribute__((weak));
const uint8_t pin_pmce[NUM_DIGITAL_PINS] = {
		DIGITAL_PIN_PMCE_0,DIGITAL_PIN_PMCE_1,DIGITAL_PIN_PMCE_2,DIGITAL_PIN_PMCE_3,DIGITAL_PIN_PMCE_4,
		DIGITAL_PIN_PMCE_5,	DIGITAL_PIN_PMCE_6,	DIGITAL_PIN_PMCE_7,	DIGITAL_PIN_PMCE_8,	DIGITAL_PIN_PMCE_9,
		DIGITAL_PIN_PMCE_10,DIGITAL_PIN_PMCE_11,DIGITAL_PIN_PMCE_12,DIGITAL_PIN_PMCE_13,DIGITAL_PIN_PMCE_14,
		DIGITAL_PIN_PMCE_15,DIGITAL_PIN_PMCE_16,DIGITAL_PIN_PMCE_17,DIGITAL_PIN_PMCE_18,DIGITAL_PIN_PMCE_19,
		DIGITAL_PIN_PMCE_20,DIGITAL_PIN_PMCE_21,DIGITAL_PIN_PMCE_22,DIGITAL_PIN_PMCE_23,DIGITAL_PIN_PMCE_24,
		DIGITAL_PIN_PMCE_25,DIGITAL_PIN_PMCE_26,DIGITAL_PIN_PMCE_27,DIGITAL_PIN_PMCE_28,DIGITAL_PIN_PMCE_29,
		DIGITAL_PIN_PMCE_30,DIGITAL_PIN_PMCE_31,DIGITAL_PIN_PMCE_32,DIGITAL_PIN_PMCE_33,DIGITAL_PIN_PMCE_34,
		DIGITAL_PIN_PMCE_35,DIGITAL_PIN_PMCE_36,DIGITAL_PIN_PMCE_37,DIGITAL_PIN_PMCE_38,DIGITAL_PIN_PMCE_39,
		DIGITAL_PIN_PMCE_40,DIGITAL_PIN_PMCE_41,DIGITAL_PIN_PMCE_42,DIGITAL_PIN_PMCE_43,DIGITAL_PIN_PMCE_44,
		DIGITAL_PIN_PMCE_45,DIGITAL_PIN_PMCE_46,DIGITAL_PIN_PMCE_47,DIGITAL_PIN_PMCE_48,DIGITAL_PIN_PMCE_49,
		DIGITAL_PIN_PMCE_50,DIGITAL_PIN_PMCE_51,DIGITAL_PIN_PMCE_52,DIGITAL_PIN_PMCE_53,DIGITAL_PIN_PMCE_54,
		DIGITAL_PIN_PMCE_55,DIGITAL_PIN_PMCE_56,
};
extern const uint8_t pin_ccde[NUM_DIGITAL_PINS] __attribute__((weak));
const uint8_t pin_ccde[NUM_DIGITAL_PINS] = {
		DIGITAL_PIN_CCDE_0,DIGITAL_PIN_CCDE_1,DIGITAL_PIN_CCDE_2,DIGITAL_PIN_CCDE_3,DIGITAL_PIN_CCDE_4,
		DIGITAL_PIN_CCDE_5,	DIGITAL_PIN_CCDE_6,	DIGITAL_PIN_CCDE_7,	DIGITAL_PIN_CCDE_8,	DIGITAL_PIN_CCDE_9,
		DIGITAL_PIN_CCDE_10,DIGITAL_PIN_CCDE_11,DIGITAL_PIN_CCDE_12,DIGITAL_PIN_CCDE_13,DIGITAL_PIN_CCDE_14,
		DIGITAL_PIN_CCDE_15,DIGITAL_PIN_CCDE_16,DIGITAL_PIN_CCDE_17,DIGITAL_PIN_CCDE_18,DIGITAL_PIN_CCDE_19,
		DIGITAL_PIN_CCDE_20,DIGITAL_PIN_CCDE_21,DIGITAL_PIN_CCDE_22,DIGITAL_PIN_CCDE_23,DIGITAL_PIN_CCDE_24,
		DIGITAL_PIN_CCDE_25,DIGITAL_PIN_CCDE_26,DIGITAL_PIN_CCDE_27,DIGITAL_PIN_CCDE_28,DIGITAL_PIN_CCDE_29,
		DIGITAL_PIN_CCDE_30,DIGITAL_PIN_CCDE_31,DIGITAL_PIN_CCDE_32,DIGITAL_PIN_CCDE_33,DIGITAL_PIN_CCDE_34,
		DIGITAL_PIN_CCDE_35,DIGITAL_PIN_CCDE_36,DIGITAL_PIN_CCDE_37,DIGITAL_PIN_CCDE_38,DIGITAL_PIN_CCDE_39,
		DIGITAL_PIN_CCDE_40,DIGITAL_PIN_CCDE_41,DIGITAL_PIN_CCDE_42,DIGITAL_PIN_CCDE_43,DIGITAL_PIN_CCDE_44,
		DIGITAL_PIN_CCDE_45,DIGITAL_PIN_CCDE_46,DIGITAL_PIN_CCDE_47,DIGITAL_PIN_CCDE_48,DIGITAL_PIN_CCDE_49,
		DIGITAL_PIN_CCDE_50,DIGITAL_PIN_CCDE_51,DIGITAL_PIN_CCDE_52,DIGITAL_PIN_CCDE_53,DIGITAL_PIN_CCDE_54,
		DIGITAL_PIN_CCDE_55,DIGITAL_PIN_CCDE_56,
};
extern const uint8_t pin_pdidis[NUM_DIGITAL_PINS] __attribute__((weak));
const uint8_t pin_pdidis[NUM_DIGITAL_PINS] = {
		DIGITAL_PIN_PDIDIS_0,DIGITAL_PIN_PDIDIS_1,DIGITAL_PIN_PDIDIS_2,DIGITAL_PIN_PDIDIS_3,DIGITAL_PIN_PDIDIS_4,
		DIGITAL_PIN_PDIDIS_5,DIGITAL_PIN_PDIDIS_6,DIGITAL_PIN_PDIDIS_7,DIGITAL_PIN_PDIDIS_8,DIGITAL_PIN_PDIDIS_9,
		DIGITAL_PIN_PDIDIS_10,DIGITAL_PIN_PDIDIS_11,DIGITAL_PIN_PDIDIS_12,DIGITAL_PIN_PDIDIS_13,DIGITAL_PIN_PDIDIS_14,
		DIGITAL_PIN_PDIDIS_15,DIGITAL_PIN_PDIDIS_16,DIGITAL_PIN_PDIDIS_17,DIGITAL_PIN_PDIDIS_18,DIGITAL_PIN_PDIDIS_19,
		DIGITAL_PIN_PDIDIS_20,DIGITAL_PIN_PDIDIS_21,DIGITAL_PIN_PDIDIS_22,DIGITAL_PIN_PDIDIS_23,DIGITAL_PIN_PDIDIS_24,
		DIGITAL_PIN_PDIDIS_25,DIGITAL_PIN_PDIDIS_26,DIGITAL_PIN_PDIDIS_27,DIGITAL_PIN_PDIDIS_28,DIGITAL_PIN_PDIDIS_29,
		DIGITAL_PIN_PDIDIS_30,DIGITAL_PIN_PDIDIS_31,DIGITAL_PIN_PDIDIS_32,DIGITAL_PIN_PDIDIS_33,DIGITAL_PIN_PDIDIS_34,
		DIGITAL_PIN_PDIDIS_35,DIGITAL_PIN_PDIDIS_36,DIGITAL_PIN_PDIDIS_37,DIGITAL_PIN_PDIDIS_38,DIGITAL_PIN_PDIDIS_39,
		DIGITAL_PIN_PDIDIS_40,DIGITAL_PIN_PDIDIS_41,DIGITAL_PIN_PDIDIS_42,DIGITAL_PIN_PDIDIS_43,DIGITAL_PIN_PDIDIS_44,
		DIGITAL_PIN_PDIDIS_45,DIGITAL_PIN_PDIDIS_46,DIGITAL_PIN_PDIDIS_47,DIGITAL_PIN_PDIDIS_48,DIGITAL_PIN_PDIDIS_49,
		DIGITAL_PIN_PDIDIS_50,DIGITAL_PIN_PDIDIS_51,DIGITAL_PIN_PDIDIS_52,DIGITAL_PIN_PDIDIS_53,DIGITAL_PIN_PDIDIS_54,
		DIGITAL_PIN_PDIDIS_55,DIGITAL_PIN_PDIDIS_56,
};

extern const uint8_t pin_pm[NUM_DIGITAL_PINS] __attribute__((weak));
const uint8_t pin_pm[NUM_DIGITAL_PINS] = {
		DIGITAL_PIN_PM_0,DIGITAL_PIN_PM_1,DIGITAL_PIN_PM_2,DIGITAL_PIN_PM_3,DIGITAL_PIN_PM_4,
		DIGITAL_PIN_PM_5,DIGITAL_PIN_PM_6,DIGITAL_PIN_PM_7,DIGITAL_PIN_PM_8,DIGITAL_PIN_PM_9,
		DIGITAL_PIN_PM_10,DIGITAL_PIN_PM_11,DIGITAL_PIN_PM_12,DIGITAL_PIN_PM_13,DIGITAL_PIN_PM_14,
		DIGITAL_PIN_PM_15,DIGITAL_PIN_PM_16,DIGITAL_PIN_PM_17,DIGITAL_PIN_PM_18,DIGITAL_PIN_PM_19,
		DIGITAL_PIN_PM_20,DIGITAL_PIN_PM_21,DIGITAL_PIN_PM_22,DIGITAL_PIN_PM_23,DIGITAL_PIN_PM_24,
		DIGITAL_PIN_PM_25,DIGITAL_PIN_PM_26,DIGITAL_PIN_PM_27,DIGITAL_PIN_PM_28,DIGITAL_PIN_PM_29,
		DIGITAL_PIN_PM_30,DIGITAL_PIN_PM_31,DIGITAL_PIN_PM_32,DIGITAL_PIN_PM_33,DIGITAL_PIN_PM_34,
		DIGITAL_PIN_PM_35,DIGITAL_PIN_PM_36,DIGITAL_PIN_PM_37,DIGITAL_PIN_PM_38,DIGITAL_PIN_PM_39,
		DIGITAL_PIN_PM_40,DIGITAL_PIN_PM_41,DIGITAL_PIN_PM_42,DIGITAL_PIN_PM_43,DIGITAL_PIN_PM_44,
		DIGITAL_PIN_PM_45,DIGITAL_PIN_PM_46,DIGITAL_PIN_PM_47,DIGITAL_PIN_PM_48,DIGITAL_PIN_PM_49,
		DIGITAL_PIN_PM_50,DIGITAL_PIN_PM_51,DIGITAL_PIN_PM_52,DIGITAL_PIN_PM_53,DIGITAL_PIN_PM_54,
		DIGITAL_PIN_PM_55,DIGITAL_PIN_PM_56,
};
extern const uint8_t pin_pu[NUM_DIGITAL_PINS] __attribute__((weak));
const uint8_t pin_pu[NUM_DIGITAL_PINS] = {
		DIGITAL_PIN_PU_0,DIGITAL_PIN_PU_1,DIGITAL_PIN_PU_2,DIGITAL_PIN_PU_3,DIGITAL_PIN_PU_4,
		DIGITAL_PIN_PU_5,DIGITAL_PIN_PU_6,DIGITAL_PIN_PU_7,DIGITAL_PIN_PU_8,DIGITAL_PIN_PU_9,
		DIGITAL_PIN_PU_10,DIGITAL_PIN_PU_11,DIGITAL_PIN_PU_12,DIGITAL_PIN_PU_13,DIGITAL_PIN_PU_14,
		DIGITAL_PIN_PU_15,DIGITAL_PIN_PU_16,DIGITAL_PIN_PU_17,DIGITAL_PIN_PU_18,DIGITAL_PIN_PU_19,
		DIGITAL_PIN_PU_20,DIGITAL_PIN_PU_21,DIGITAL_PIN_PU_22,DIGITAL_PIN_PU_23,DIGITAL_PIN_PU_24,
		DIGITAL_PIN_PU_25,DIGITAL_PIN_PU_26,DIGITAL_PIN_PU_27,DIGITAL_PIN_PU_28,DIGITAL_PIN_PU_29,
		DIGITAL_PIN_PU_30,DIGITAL_PIN_PU_31,DIGITAL_PIN_PU_32,DIGITAL_PIN_PU_33,DIGITAL_PIN_PU_34,
		DIGITAL_PIN_PU_35,DIGITAL_PIN_PU_36,DIGITAL_PIN_PU_37,DIGITAL_PIN_PU_38,DIGITAL_PIN_PU_39,
		DIGITAL_PIN_PU_40,DIGITAL_PIN_PU_41,DIGITAL_PIN_PU_42,DIGITAL_PIN_PU_43,DIGITAL_PIN_PU_44,
		DIGITAL_PIN_PU_45,DIGITAL_PIN_PU_46,DIGITAL_PIN_PU_47,DIGITAL_PIN_PU_48,DIGITAL_PIN_PU_49,
		DIGITAL_PIN_PU_50,DIGITAL_PIN_PU_51,DIGITAL_PIN_PU_52,DIGITAL_PIN_PU_53,DIGITAL_PIN_PU_54,
		DIGITAL_PIN_PU_55,DIGITAL_PIN_PU_56,
};
extern const uint8_t pin_pim[NUM_DIGITAL_PINS] __attribute__((weak));
const uint8_t pin_pim[NUM_DIGITAL_PINS] = {
		DIGITAL_PIN_PIM_0,DIGITAL_PIN_PIM_1,DIGITAL_PIN_PIM_2,DIGITAL_PIN_PIM_3,DIGITAL_PIN_PIM_4,
		DIGITAL_PIN_PIM_5,DIGITAL_PIN_PIM_6,DIGITAL_PIN_PIM_7,DIGITAL_PIN_PIM_8,DIGITAL_PIN_PIM_9,
		DIGITAL_PIN_PIM_10,DIGITAL_PIN_PIM_11,DIGITAL_PIN_PIM_12,DIGITAL_PIN_PIM_13,DIGITAL_PIN_PIM_14,
		DIGITAL_PIN_PIM_15,DIGITAL_PIN_PIM_16,DIGITAL_PIN_PIM_17,DIGITAL_PIN_PIM_18,DIGITAL_PIN_PIM_19,
		DIGITAL_PIN_PIM_20,DIGITAL_PIN_PIM_21,DIGITAL_PIN_PIM_22,DIGITAL_PIN_PIM_23,DIGITAL_PIN_PIM_24,
		DIGITAL_PIN_PIM_25,DIGITAL_PIN_PIM_26,DIGITAL_PIN_PIM_27,DIGITAL_PIN_PIM_28,DIGITAL_PIN_PIM_29,
		DIGITAL_PIN_PIM_30,DIGITAL_PIN_PIM_31,DIGITAL_PIN_PIM_32,DIGITAL_PIN_PIM_33,DIGITAL_PIN_PIM_34,
		DIGITAL_PIN_PIM_35,DIGITAL_PIN_PIM_36,DIGITAL_PIN_PIM_37,DIGITAL_PIN_PIM_38,DIGITAL_PIN_PIM_39,
		DIGITAL_PIN_PIM_40,DIGITAL_PIN_PIM_41,DIGITAL_PIN_PIM_42,DIGITAL_PIN_PIM_43,DIGITAL_PIN_PIM_44,
		DIGITAL_PIN_PIM_45,DIGITAL_PIN_PIM_46,DIGITAL_PIN_PIM_47,DIGITAL_PIN_PIM_48,DIGITAL_PIN_PIM_49,
		DIGITAL_PIN_PIM_50,DIGITAL_PIN_PIM_51,DIGITAL_PIN_PIM_52,DIGITAL_PIN_PIM_53,DIGITAL_PIN_PIM_54,
		DIGITAL_PIN_PIM_55,DIGITAL_PIN_PIM_56,
};
extern const uint8_t pin_pom[NUM_DIGITAL_PINS] __attribute__((weak));
const uint8_t pin_pom[NUM_DIGITAL_PINS] = {
		DIGITAL_PIN_POM_0,DIGITAL_PIN_POM_1,DIGITAL_PIN_POM_2,DIGITAL_PIN_POM_3,DIGITAL_PIN_POM_4,
		DIGITAL_PIN_POM_5,DIGITAL_PIN_POM_6,DIGITAL_PIN_POM_7,DIGITAL_PIN_POM_8,DIGITAL_PIN_POM_9,
		DIGITAL_PIN_POM_10,DIGITAL_PIN_POM_11,DIGITAL_PIN_POM_12,DIGITAL_PIN_POM_13,DIGITAL_PIN_POM_14,
		DIGITAL_PIN_POM_15,DIGITAL_PIN_POM_16,DIGITAL_PIN_POM_17,DIGITAL_PIN_POM_18,DIGITAL_PIN_POM_19,
		DIGITAL_PIN_POM_20,DIGITAL_PIN_POM_21,DIGITAL_PIN_POM_22,DIGITAL_PIN_POM_23,DIGITAL_PIN_POM_24,
		DIGITAL_PIN_POM_25,DIGITAL_PIN_POM_26,DIGITAL_PIN_POM_27,DIGITAL_PIN_POM_28,DIGITAL_PIN_POM_29,
		DIGITAL_PIN_POM_30,DIGITAL_PIN_POM_31,DIGITAL_PIN_POM_32,DIGITAL_PIN_POM_33,DIGITAL_PIN_POM_34,
		DIGITAL_PIN_POM_35,DIGITAL_PIN_POM_36,DIGITAL_PIN_POM_37,DIGITAL_PIN_POM_38,DIGITAL_PIN_POM_39,
		DIGITAL_PIN_POM_40,DIGITAL_PIN_POM_41,DIGITAL_PIN_POM_42,DIGITAL_PIN_POM_43,DIGITAL_PIN_POM_44,
		DIGITAL_PIN_POM_45,DIGITAL_PIN_POM_46,DIGITAL_PIN_POM_47,DIGITAL_PIN_POM_48,DIGITAL_PIN_POM_49,
		DIGITAL_PIN_POM_50,DIGITAL_PIN_POM_51,DIGITAL_PIN_POM_52,DIGITAL_PIN_POM_53,DIGITAL_PIN_POM_54,
		DIGITAL_PIN_POM_55,DIGITAL_PIN_POM_56,
};

void getPinTable(uint8_t pin,PinTableType *pp);

#ifdef __cplusplus
};
#endif

#endif/*_PINTABLE_H_*/
